

%Add paths
addpath(genpath('/Volumes/buschman/Rodent Data/Wide Field Microscopy/fpCNMF'));
%addpath(genpath('/Volumes/buschman/Rodent Data/Wide Field Microscopy/Widefield_Imaging_Analysis'));

%configure preprocessing options
opts = ConfigurePreProcessing('crop_w',540,'vasc_std',2,'save_uncorrected',0);

%load general params (this is for anything after preprocessing)
parameter_class = 'general_params_example';
gp = loadobj(feval(parameter_class)); %this is not needed here, but demonstrates how I load this class in other functions by just passing the string. 

bdat = load(fullfile('/Volumes/buschman/Users/Caroline/NADA_dynamics/data/DA001_072623_behv_data.mat'), 'data'); 
bdat = bdat.('data'); 

%% Manual Portion
%select folders to process and grab the first file from each rec.
%EXAMPLE DATA: Select 'folders' and then select 'Z:\Rodent Data\WideField Microscopy\ExampleData\Mouse431_10_17_2019\431-10-17-2019_1'
[file_list_first_stack,folder_list_raw] = GrabFiles('Pos0.ome.tif',1,'/Volumes/buschman/Rodent Data/Behavioral_dynamics_cj/DA001/DA001_072623);

%Grab reference images for each. Preload so no delay between loop.
ref_imgs = cellfun(@(x) GetReferenceImage(x,opts.fixed_image),...
file_list_first_stack, 'UniformOutput',0);

cur_fold=1;
%manual allignment 
prepro_log = ManualAlignment(ref_imgs{cur_fold},opts);

%mask vasculature and manual cleanup (optional)
prepro_log = MaskVasculature(...
    prepro_log.cropped_alligned_img,prepro_log);

close
%no transformation
prepro_log.tform = []; 
prepro_log.output_size = [];

%save off the options to each folder
save([folder_list_raw{cur_fold} filesep 'prepro_log'],'prepro_log')

%% Preprocessing. Results in a single hemo corrected, masked recording for each day in the 'preprocessed' folder
%gather recordings
cur_fold = 1; 
file_list_preprocessed = cell(1,numel(folder_list_raw));
[file_list_raw,~] = GrabFiles('.tif',0,folder_list_raw(cur_fold));
[opts_list,~] = GrabFiles('prepro_log.m',0,folder_list_raw(cur_fold)); 
opts = load(opts_list{1});
opts = opts.prepro_log;
[path, fn] = fileparts(file_list_raw{1});

%Process
stack = PreProcess(file_list_raw{1},opts);

%make Dff %NOTE: METHOD MAY MAKE TRIAL-based recs weird
stack_b = stack(:,:,1:2:end);
% dff = makeDFF(stack_b, opts); 

%basic dff
avg_proj = nanmean(stack_b(:,:,1:15),3);
dff = (double(stack_b)-avg_proj)./avg_proj; 


%examine the data
temp = reshape(dff,size(dff,1)*size(dff,2),size(dff,3));
imagesc(temp)

%histrogram
figure; hold on; 
histogram(dff(:))

%play our video; 
close all;
for i = 1:size(dff,3)
   imagesc(dff(:,:,i),[-0.1,0.2]);
   title(sprintf('frame %d of %d',i,size(dff,3)));
   pause(0.2)
end

%if you want to see what the preprocessed data looks like then run
% InspectPreprocessedData(PreprocessedDataFilepath,'preprocessed')

%% Deconvolution, chunking, and Motif Fitting. Results in cross validated motifs in the MotifFits folder and Deconvolved and chunked data in the Preprocessed
%if you need to restart from this point: 
% [file_list_preprocessed,~] = GrabFiles('*.mat'); %select the preprocessed data (not the '_processed');

% NEED TO WAIT FOR ABOVE TO COMPLETE
job_id = cell(1,numel(file_list_preprocessed));
file_list_motifs = cell(1,numel(file_list_preprocessed));
file_list_processed = cell(1,numel(file_list_preprocessed));
for cur_file = 1:numel(file_list_preprocessed)  
    [~, fn_temp] = fileparts(file_list_preprocessed{cur_file});      
    file_list_processed{cur_file} = [save_dir_processed fn_temp '_processed.mat']; %path in temporary folder with the train/test split data
    
    %deconvolve and split the data    
    script_name = WriteBashScript(sprintf('%d',cur_file),'ProcessAndSplitData',{ConvertToBucketPath(file_list_preprocessed{cur_file}),...
        ConvertToBucketPath(file_list_processed{cur_file}),parameter_class},...
        {"'%s'","'%s'","'%s'"},...
        'sbatch_time',5,'sbatch_memory',16,...
        'sbatch_path',"/jukebox/buschman/Rodent Data/Wide Field Microscopy/Widefield_Imaging_Analysis/Preprocessing/");
    %Run job
    response = ssh2_command(s_conn,...
        ['cd /jukebox/buschman/Rodent\ Data/Wide\ Field\ Microscopy/Widefield_Imaging_Analysis/Spock/DynamicScripts/ ;',... %cd to directory
        sprintf('sbatch %s',script_name)]);        
    %get job id
    temp_job_id = erase(response.command_result{1},'Submitted batch job ');
    
%     %Fit motifs and cross-validate (parallellize by chunk)
%     [swarm_id, swarm_motifs] = FitMotifs_SpockSwarm(file_list_processed{cur_file},temp_job_id,s_conn,parameter_class);
%     job_id{cur_file} = [swarm_id{:}]; 
%     file_list_motifs{cur_file} = swarm_motifs;
end

%if you want to see what the postprocessed data looks like then run
%InspectPreprocessedData(PreprocessedDataFilepath,'postprocessed')

%% Cluster Motifs

%% Refit Clustered Motifs to the data

%% Refit the motifs built from all the animals to the data
job_id = [];
motif_save_dir = 'Z:\Rodent Data\Wide Field Microscopy\ControlExperiments_WidefieldData\MotifFits';
[file_list_processed,~] = GrabFiles('*.mat'); %select the deconvolved data
% Spock_RefitBasisMotifs_Swarm(file_list_processed,'Z:\Rodent Data\Wide Field Microscopy\ExampleData\',job_id,s_conn,parameter_class);
Spock_RefitBasisMotifs_Swarm(file_list_processed,'Z:\Rodent Data\Wide Field Microscopy\VPA Experiments_Spring2018\VPA_Mesomapping\FitMotifs_deconvolution\ALL',...
    job_id,s_conn,parameter_class,motif_save_dir);


%%

%Run clean up script and close out connection
ssh2_close(s_conn);
clear username password sconn




















